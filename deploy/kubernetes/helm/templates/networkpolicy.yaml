---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny
  namespace: {{ .Release.Namespace }}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: server
  namespace: {{ .Release.Namespace }}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: {{ .Release.Namespace }}
          podSelector:
            matchLabels:
              App: client
      ports:
        - port: 3000
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: {{ .Release.Namespace }}
          podSelector:
            matchLabels:
              App: server
      ports:
        - port: 3000

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: rabbitmq
  namespace: {{ .Release.Namespace }}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: {{ .Release.Namespace }}
          podSelector:
            matchLabels:
              App: server
        - namespaceSelector:
            matchLabels:
              name: {{ .Release.Namespace }}
          podSelector:
            matchLabels:
              App: scheduler
        - namespaceSelector:
            matchLabels:
              name: {{ .Release.Namespace }}
          podSelector:
            matchLabels:
              App: agent-deadletter-watcher
      ports:
        - port: 5672
        - port: 15672
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: {{ .Release.Namespace }}
          podSelector:
            matchLabels:
              app.kubernetes.io/name: rabbitmq
      ports:
        - port: 5672
        - port: 4369
        - port: 25672
        - port: 15672

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mongodb
  namespace: {{ .Release.Namespace }}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: {{ .Release.Namespace }}
          podSelector:
            matchExpressions:
            - key: App
              operator: In
              values: [ "scheduler", "server" ]
      ports:
        - port: 27017
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: {{ .Release.Namespace }}
          podSelector:
            matchLabels:
              app.kubernetes.io/name: mongodb
      ports:
        - port: 27017
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - port: 27017

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: internet
  namespace: {{ .Release.Namespace }}
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
      ports:
        - port: 80
        - port: 443
        - port: 5671
        - port: 5672
        - port: 15671
        - port: 15672

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: client
  namespace: {{ .Release.Namespace }}
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
    - from: []
      ports:
        - port: 8080
